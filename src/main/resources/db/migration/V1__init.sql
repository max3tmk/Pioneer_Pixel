DROP TABLE IF EXISTS phone_data CASCADE;
DROP TABLE IF EXISTS email_data CASCADE;
DROP TABLE IF EXISTS account CASCADE;
DROP TABLE IF EXISTS "user" CASCADE;

CREATE TABLE "user" (
                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        name VARCHAR(500) NOT NULL,
                        date_of_birth DATE NOT NULL,
                        password VARCHAR(500) NOT NULL CHECK (char_length(password) BETWEEN 8 AND 500)
);

CREATE TABLE account (
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         user_id BIGINT UNIQUE NOT NULL,
                         balance NUMERIC(19,2) NOT NULL DEFAULT 0,
                         initial_balance NUMERIC(19,2) NOT NULL DEFAULT 0,
                         CONSTRAINT fk_account_user FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE
);

CREATE TABLE email_data (
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            user_id BIGINT NOT NULL,
                            email VARCHAR(255) NOT NULL,
                            CONSTRAINT fk_email_user FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE
);

CREATE TABLE phone_data (
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            user_id BIGINT NOT NULL,
                            phone VARCHAR(13) NOT NULL,
                            CONSTRAINT fk_phone_user FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE
);

CREATE TYPE transaction_status AS ENUM ('SUCCESS', 'FAILED', 'INSUFFICIENT_FUNDS', 'ERROR');

CREATE TABLE transaction_history (
                                     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     from_user_id BIGINT NOT NULL,
                                     to_user_id BIGINT NOT NULL,
                                     amount NUMERIC(19,4) NOT NULL,
                                     timestamp TIMESTAMP NOT NULL DEFAULT now(),
                                     status transaction_status,
                                     error_message TEXT,
                                     CONSTRAINT fk_from_user FOREIGN KEY (from_user_id) REFERENCES "user"(id),
                                     CONSTRAINT fk_to_user FOREIGN KEY (to_user_id) REFERENCES "user"(id)
);